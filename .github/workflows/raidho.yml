name: Raidiho deploy

on:
  pull_request:
    branches:
      - deploy
    types: [closed]

jobs:
  deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Check Node v            # Node v 확인
        run: node -v

      # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_KAKAO_CLIENT_ID=$REACT_APP_KAKAO_CLIENT_ID" >> .env
          echo "REACT_APP_KAKAO_REDIRECT_URI=$REACT_APP_KAKAO_REDIRECT_URI" >> .env
          echo "REACT_APP_BASE_URI=$REACT_APP_BASE_URI" >> .env
        env:
          REACT_APP_KAKAO_CLIENT_ID: ${{ secrets.REACT_APP_KAKAO_CLIENT_ID }}
          REACT_APP_KAKAO_REDIRECT_URI: ${{ secrets.REACT_APP_KAKAO_REDIRECT_URI }}
          REACT_APP_BASE_URI: ${{ secrets.REACT_APP_BASE_URI }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy                
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:
          aws s3 cp --recursive --region ap-northeast-2 build s3://raidho.site

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.DEV_AWS_DISTRIBUTION_ID}} --paths "/*"